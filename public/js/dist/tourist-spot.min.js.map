{"version":3,"sources":["tourist-spot.js"],"names":["getCookie","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","addEventListener","urlParams","URLSearchParams","window","location","search","contentId","get","userId","console","log","Promise","all","method","Content-Type","body","getElementById","innerText","then","response","json","fetch","headers","JSON","stringify","_ref2","_slicedToArray","_ref","basicData","additionalData","detailsContent","items","Array","isArray","item","img","createElement","src","firstimage","title","displayDetails","textContent","addr","addr1","homepageLink","DOMParser","homepage","link","doc","href","appendChild","description","parser","disabilityInfo","target","add","wheelchair","concat","innerHTML","exit","elevator","restroom","guidesystem","blindhandicapetc","signguide","videoguide","barrierInfo","stroller","classList","nursingroom","babysparechair","babycarriage","auditorium","noBarrierFreeInfo","other","braileblock","audioguide","images","imageGallery","brailepromotionalmaterial","className","parking","imgElement","publictransport","ticketoffice","promotionalmaterial","noImages","preventDefault","reviewText","value","reviewImage","originimgurl","error","event","formData","files","spotId","append","data","success","alert","reload","displayReviews","reviews","reviewsContainer","submitComment","review","reviewDiv","commentInput","content","image","id","comments","map","comment","user","join","forEach"],"mappings":"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","file":"tourist-spot.min.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const contentId = urlParams.get('contentId');\r\n    const userId = getCookie('userId'); // 쿠키에서 userId 가져오기\r\n\r\n    console.log('ContentId:', contentId); // 디버깅 출력\r\n    console.log('UserId:', userId); // 디버깅 출력\r\n\r\n    if (!contentId) {\r\n        document.getElementById('detailContent').innerText = 'No content ID provided';\r\n        return;\r\n    }\r\n\r\n    // 두 API에서 데이터를 모두 가져오기\r\n    Promise.all([\r\n        fetch('/barrier-free-info', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ contentId: contentId })\r\n        }).then(response => response.json()),   \r\n        fetch('/get-disability-info-and-images', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ contentId: contentId })\r\n        }).then(response => response.json())\r\n    ])\r\n    .then(([basicData, additionalData]) => {\r\n        displayDetails(basicData, additionalData);\r\n    })\r\n    .catch(error => {\r\n        console.error('Error fetching data:', error);\r\n        document.getElementById('detailContent').innerText = 'Error fetching data';\r\n    });\r\n\r\n    function displayDetails(basicData, additionalData) {\r\n        const detailsContent = document.getElementById('detailContent');\r\n        detailsContent.innerHTML = ''; // Clear previous details\r\n\r\n        // 기본 데이터 처리\r\n        if (basicData.response && basicData.response.body && basicData.response.body.items) {\r\n            const item = Array.isArray(basicData.response.body.items.item) ? basicData.response.body.items.item[0] : basicData.response.body.items.item;\r\n            if (item) {\r\n                const img = document.createElement('img');\r\n                img.src = item.firstimage || 'images/default-image.jpg'; // Use default image\r\n                img.alt = item.title || 'No title';\r\n\r\n                const title = document.createElement('h2');\r\n                title.textContent = item.title || '제목 없음';\r\n\r\n                const addr = document.createElement('p');\r\n                addr.textContent = item.addr1 || '주소 없음';\r\n\r\n                const description = document.createElement('p');\r\n                description.textContent = item.overview || 'No description available';\r\n\r\n                const homepageLink = document.createElement('a');\r\n                const parser = new DOMParser();\r\n                const doc = parser.parseFromString(item.homepage, 'text/html');\r\n                const link = doc.querySelector('a') ? doc.querySelector('a').href : '#';\r\n                homepageLink.href = link;\r\n                homepageLink.textContent = '홈페이지 이동';\r\n                homepageLink.target = '_blank';\r\n\r\n                detailsContent.appendChild(img);\r\n                detailsContent.appendChild(title);\r\n                detailsContent.appendChild(addr);\r\n                detailsContent.appendChild(description);\r\n                detailsContent.appendChild(homepageLink);\r\n            } else {\r\n                detailsContent.innerHTML = 'No details available';\r\n            }\r\n        } else {\r\n            detailsContent.innerHTML = 'No details available';\r\n        }\r\n\r\n        // 추가 데이터 처리\r\n        if (additionalData.disabilityInfo && additionalData.disabilityInfo.response.body.items.item) {\r\n            const item = additionalData.disabilityInfo.response.body.items.item[0];\r\n\r\n            const barrierInfo = document.createElement('div');\r\n            barrierInfo.classList.add('barrier-info');\r\n            barrierInfo.innerHTML = `\r\n                <h3>무장애 편의 정보</h3>\r\n                ${item.wheelchair ? `<p>휠체어: ${item.wheelchair}</p>` : ''}\r\n                ${item.exit ? `<p>출구: ${item.exit}</p>` : ''}\r\n                ${item.elevator ? `<p>엘리베이터: ${item.elevator}</p>` : ''}\r\n                ${item.restroom ? `<p>장애인 화장실: ${item.restroom}</p>` : ''}\r\n                ${item.guidesystem ? `<p>유도 시스템: ${item.guidesystem}</p>` : ''}\r\n                ${item.blindhandicapetc ? `<p>시각 장애인 기타: ${item.blindhandicapetc}</p>` : ''}\r\n                ${item.signguide ? `<p>표지판 안내: ${item.signguide}</p>` : ''}\r\n                ${item.videoguide ? `<p>비디오 안내: ${item.videoguide}</p>` : ''}\r\n                ${item.hearingroom ? `<p>청각 장애인 실: ${item.hearingroom}</p>` : ''}\r\n                ${item.hearinghandicapetc ? `<p>청각 장애인 기타: ${item.hearinghandicapetc}</p>` : ''}\r\n                ${item.stroller ? `<p>유모차: ${item.stroller}</p>` : ''}\r\n                ${item.nursingroom ? `<p>수유실: ${item.nursingroom}</p>` : ''}\r\n                ${item.babysparechair ? `<p>유아 보조 의자: ${item.babysparechair}</p>` : ''}\r\n                ${item.babycarriage ? `<p>유아 및 가족 기타: ${item.babycarriage}</p>` : ''}\r\n                ${item.auditorium ? `<p>강당: ${item.auditorium}</p>` : ''}\r\n                ${item.room ? `<p>방: ${item.room}</p>` : ''}\r\n                ${item.other ? `<p>기타 장애인 시설: ${item.other}</p>` : ''}\r\n                ${item.braileblock ? `<p>점자 블록: ${item.braileblock}</p>` : ''}\r\n                ${item.blindhandicapetc ? `<p>안내견: ${item.blindhandicapetc}</p>` : ''}\r\n                ${item.guidesystem ? `<p>안내 인력: ${item.guidesystem}</p>` : ''}\r\n                ${item.audioguide ? `<p>오디오 안내: ${item.audioguide}</p>` : ''}\r\n                ${item.largeprintguide ? `<p>큰 글씨 안내: ${item.largeprintguide}</p>` : ''}\r\n                ${item.brailepromotionalmaterial ? `<p>점자 홍보물: ${item.brailepromotionalmaterial}</p>` : ''}\r\n                ${item.parking ? `<p>주차: ${item.parking}</p>` : ''}\r\n                ${item.route ? `<p>경로: ${item.route}</p>` : ''}\r\n                ${item.publictransport ? `<p>대중교통: ${item.publictransport}</p>` : ''}\r\n                ${item.ticketoffice ? `<p>티켓 오피스: ${item.ticketoffice}</p>` : ''}\r\n                ${item.promotionalmaterial ? `<p>홍보물: ${item.promotionalmaterial}</p>` : ''}\r\n            `;\r\n            detailsContent.appendChild(barrierInfo);\r\n        } else {\r\n            const noBarrierFreeInfo = document.createElement('p');\r\n            noBarrierFreeInfo.innerText = 'No barrier-free information available';\r\n            detailsContent.appendChild(noBarrierFreeInfo);\r\n        }\r\n\r\n        // 이미지 갤러리 추가\r\n        if (additionalData.images && additionalData.images.response.body.items.item) {\r\n            const imageGallery = document.createElement('div');\r\n            imageGallery.className = 'image-gallery';\r\n            additionalData.images.response.body.items.item.forEach(img => {\r\n                const imgElement = document.createElement('img');\r\n                imgElement.src = img.originimgurl;\r\n                imageGallery.appendChild(imgElement);\r\n            });\r\n            detailsContent.appendChild(imageGallery);\r\n        } else {\r\n            const noImages = document.createElement('p');\r\n            noImages.innerText = '이미지 없음';\r\n            detailsContent.appendChild(noImages);\r\n        }\r\n    }\r\n\r\n    // 리뷰 제출 기능\r\n    document.getElementById('reviewForm').addEventListener('submit', function(event) {\r\n        event.preventDefault();\r\n        const reviewText = document.getElementById('reviewText').value;\r\n        const reviewImage = document.getElementById('reviewImage').files[0];\r\n        const userId = getCookie('userId'); // 세션에서 userId 가져오기\r\n        const spotId = urlParams.get('contentId'); // URL에서 contentId 가져오기\r\n        console.log('UserId:', userId); // 디버깅 출력\r\n        console.log('SpotId:', spotId); // 디버깅 출력\r\n        const formData = new FormData();\r\n        formData.append('userId', userId);\r\n        formData.append('spotId', spotId);\r\n        formData.append('reviewText', reviewText);\r\n        if (reviewImage) {\r\n            formData.append('reviewImage', reviewImage);\r\n        }\r\n\r\n        fetch('/submit-review', {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                alert('리뷰가 제출되었습니다!');\r\n                location.reload(); // 새 리뷰를 표시하기 위해 페이지 새로고침\r\n            } else {\r\n                alert('리뷰 제출에 실패했습니다.');\r\n            }\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n    });\r\n\r\n    // 리뷰 가져오기 기능\r\n    fetch(`/reviews?contentId=${contentId}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                displayReviews(data.reviews);\r\n            } else {\r\n                document.getElementById('reviewsContainer').innerText = '리뷰를 가져오는 중 오류가 발생했습니다.';\r\n            }\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n\r\n    function displayReviews(reviews) {\r\n        const reviewsContainer = document.getElementById('reviewsContainer');\r\n        reviewsContainer.innerHTML = '';\r\n        reviews.forEach(review => {\r\n            const reviewDiv = document.createElement('div');\r\n            reviewDiv.classList.add('review-item');\r\n            reviewDiv.innerHTML = `\r\n                <p>${review.user}: ${review.content}</p>\r\n                ${review.image ? `<img src=\"/uploads/${review.image}\" alt=\"Review Image\">` : ''}\r\n                <form onsubmit=\"submitComment(event, ${review.id})\">\r\n                    <input type=\"text\" id=\"commentInput-${review.id}\" placeholder=\"댓글 작성해 주세요...\" required>\r\n                    <button type=\"submit\">댓글 작성</button>\r\n                </form>\r\n                <div id=\"commentsContainer-${review.id}\">\r\n                    ${review.comments ? review.comments.map(comment => `<p>${comment.user}: ${comment.content}</p>`).join('') : ''}\r\n                </div>\r\n            `;\r\n            reviewsContainer.appendChild(reviewDiv);\r\n        });\r\n    }\r\n\r\n    function submitComment(event, reviewId) {\r\n        event.preventDefault(); // 폼 제출 시 페이지 리로드 방지\r\n        const commentInput = document.getElementById(`commentInput-${reviewId}`);\r\n        const comment = commentInput.value;\r\n        const userId = getCookie('userId'); // 사용자 ID 가져오기\r\n\r\n        fetch('/submit-comment', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ reviewId: reviewId, userId: userId, comment: comment })\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                alert('댓글 작성이 완료되었습니다!');\r\n                commentInput.value = ''; // 입력 필드 초기화\r\n                fetchComments(reviewId); // 댓글 목록 새로고침\r\n            } else {\r\n                alert('댓글 작성에 실패했습니다: ' + data.message);\r\n            }\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n    }\r\n\r\n});\r\n\r\n// 쿠키 가져오기 함수 추가\r\nfunction getCookie(name) {\r\n    let matches = document.cookie.match(new RegExp(\r\n        \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n    ));\r\n    return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}"]}