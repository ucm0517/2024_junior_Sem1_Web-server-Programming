{"version":3,"sources":["search-results.js"],"names":["document","addEventListener","URLSearchParams","window","location","search","get","urlParams","keyword","getElementById","resultsDiv","loadingSpinner","searchKeyword","currentPage","pageNo","innerHTML","paginationDiv","style","display","console","log","concat","fetch","body","JSON","stringify","ok","response","json","data","items","item","totalCount","error","_context","t0","displayResults","length","list","createElement","forEach","listItem","dataset","contentid","img","src","firstimage","width","height","itemInfo","className","title","textContent","addr","addr1","description","overview","appendChild","href","ceil","floor","maxPagesToShow","Math","max","startPage","totalPages","alt","_loop","i","pageButton","backgroundColor","endPage","nextButton","displayPagination"],"mappings":"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","file":"search-results.min.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const keyword = urlParams.get('keyword');\r\n    const resultsDiv = document.getElementById('results');\r\n    const loadingSpinner = document.getElementById('loadingSpinner');\r\n    const paginationDiv = document.getElementById('pagination');\r\n    let currentPage = 1;\r\n\r\n    if (!keyword) {\r\n        resultsDiv.innerHTML = '검색어가 제공되지 않았습니다.';\r\n        return;\r\n    }\r\n\r\n    searchKeyword(keyword, currentPage);\r\n\r\n    async function searchKeyword(keyword, pageNo) {\r\n        resultsDiv.innerHTML = '';\r\n        paginationDiv.innerHTML = '';\r\n        loadingSpinner.style.display = 'block';\r\n\r\n        console.log(`Searching for keyword: ${keyword}, page: ${pageNo}`); // 추가된 로그\r\n\r\n        try {\r\n            const response = await fetch('/search-keyword', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ keyword: keyword, pageNo: pageNo })\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                console.log(`Search results: ${JSON.stringify(data)}`); // 추가된 로그\r\n                if (data.response && data.response.body && data.response.body.items && data.response.body.items.item) {\r\n                    displayResults(data.response.body.items.item, data.response.body.totalCount);\r\n                } else {\r\n                    resultsDiv.innerHTML = 'No results found';\r\n                }\r\n            } else {\r\n                resultsDiv.innerHTML = 'Error fetching data';\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error); // 추가된 로그\r\n            resultsDiv.innerHTML = 'Error fetching data';\r\n        } finally {\r\n            loadingSpinner.style.display = 'none';\r\n        }\r\n    }\r\n\r\n    function displayResults(items, totalCount) {\r\n        if (items.length > 0) {\r\n            const list = document.createElement('ul');\r\n            items.forEach(item => {\r\n                const listItem = document.createElement('li');\r\n                listItem.dataset.contentid = item.contentid;\r\n\r\n                const img = document.createElement('img');\r\n                img.src = item.firstimage || 'images/default-image.jpg';\r\n                img.alt = item.title || 'No title';\r\n                img.style.width = '100px';\r\n                img.style.height = '100px';\r\n\r\n                const itemInfo = document.createElement('div');\r\n                itemInfo.className = 'item-info';\r\n                const title = document.createElement('h3');\r\n                title.textContent = item.title || 'No title';\r\n                const addr = document.createElement('p');\r\n                addr.textContent = item.addr1 || 'No address available';\r\n                const description = document.createElement('p');\r\n                description.textContent = item.overview || 'No description available';\r\n\r\n                itemInfo.appendChild(title);\r\n                itemInfo.appendChild(addr);\r\n                itemInfo.appendChild(description);\r\n\r\n                listItem.appendChild(img);\r\n                listItem.appendChild(itemInfo);\r\n                listItem.addEventListener('click', () => {\r\n                    window.location.href = `details.html?contentId=${item.contentid}`;\r\n                });\r\n\r\n                list.appendChild(listItem);\r\n            });\r\n            resultsDiv.appendChild(list);\r\n            displayPagination(totalCount);\r\n        } else {\r\n            resultsDiv.innerHTML = 'No results found';\r\n        }\r\n    }\r\n\r\n    function displayPagination(totalCount) {\r\n        const totalPages = Math.ceil(totalCount / 5);\r\n        const maxPagesToShow = 5;\r\n        let startPage = currentPage - Math.floor(maxPagesToShow / 2);\r\n        startPage = Math.max(startPage, 1);\r\n        let endPage = startPage + maxPagesToShow - 1;\r\n        endPage = Math.min(endPage, totalPages);\r\n\r\n        if (startPage > 1) {\r\n            const prevButton = document.createElement('button');\r\n            prevButton.innerHTML = '&laquo;';\r\n            prevButton.className = 'arrow';\r\n            prevButton.addEventListener('click', () => {\r\n                currentPage = startPage - 1;\r\n                searchKeyword(keyword, currentPage);\r\n            });\r\n            paginationDiv.appendChild(prevButton);\r\n        }\r\n\r\n        for (let i = startPage; i <= endPage; i++) {\r\n            const pageButton = document.createElement('button');\r\n            pageButton.textContent = i;\r\n            pageButton.addEventListener('click', () => {\r\n                currentPage = i;\r\n                searchKeyword(keyword, currentPage);\r\n            });\r\n            if (i === currentPage) {\r\n                pageButton.style.backgroundColor = '#0056b3';\r\n            }\r\n            paginationDiv.appendChild(pageButton);\r\n        }\r\n\r\n        if (endPage < totalPages) {\r\n            const nextButton = document.createElement('button');\r\n            nextButton.innerHTML = '&raquo;';\r\n            nextButton.className = 'arrow';\r\n            nextButton.addEventListener('click', () => {\r\n                currentPage = endPage + 1;\r\n                searchKeyword(keyword, currentPage);\r\n            });\r\n            paginationDiv.appendChild(nextButton);\r\n        }\r\n    }\r\n});"]}