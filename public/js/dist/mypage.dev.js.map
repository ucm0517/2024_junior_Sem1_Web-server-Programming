{"version":3,"sources":["mypage.js"],"names":["document","addEventListener","userId","sessionStorage","getItem","fetchUserReviews","fetchUserComments","console","error","fetch","method","headers","body","JSON","stringify","then","response","json","data","success","displayUserReviews","reviews","reviewsContainer","getElementById","innerHTML","forEach","review","reviewDiv","createElement","classList","add","content","image","id","likes","appendChild","editReview","reviewId","newContent","prompt","alert","message","deleteReview","confirm","likeReview","likeCountSpan","textContent","userComments","comments","comment","commentDiv","className","deleteAccount","credentials","ok","removeItem","window","location","href","logout","getCookie","name","matches","cookie","match","RegExp","replace","decodeURIComponent","undefined"],"mappings":"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","sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\r\n    const userId = sessionStorage.getItem('userId'); // userId를 세션에서 가져옴\r\n\r\n    if (userId) {\r\n        fetchUserReviews(userId);\r\n        fetchUserComments(userId);\r\n    } else {\r\n        console.error('사용자 ID가 없습니다.');\r\n    }\r\n});\r\n\r\nfunction fetchUserReviews(userId) {\r\n    fetch('/user-reviews', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ userId: userId }) // userId를 보냄\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        if (data.success) {\r\n            displayUserReviews(data.reviews);\r\n        } else {\r\n            console.error('리뷰를 가져오는 중 오류가 발생했습니다.');\r\n        }\r\n    })\r\n    .catch(error => console.error('Error:', error));\r\n}\r\n\r\nfunction displayUserReviews(reviews) {\r\n    const reviewsContainer = document.getElementById('userReviews');\r\n    reviewsContainer.innerHTML = ''; // 기존 내용을 지움\r\n    reviews.forEach(review => {\r\n        const reviewDiv = document.createElement('div');\r\n        reviewDiv.classList.add('review-item');\r\n        reviewDiv.innerHTML = `\r\n            <p>${review.content}</p>\r\n            ${review.image ? `<img src=\"/uploads/${review.image}\" alt=\"Review Image\">` : ''}\r\n            <button onclick=\"editReview(${review.id})\">수정</button>\r\n            <button onclick=\"deleteReview(${review.id})\">삭제</button>\r\n            <button onclick=\"likeReview(${review.id})\">좋아요</button> <!-- 좋아요 버튼 추가 -->\r\n            <span id=\"likeCount-${review.id}\">${review.likes}</span> <!-- 좋아요 개수 표시 -->\r\n        `;\r\n        reviewsContainer.appendChild(reviewDiv);\r\n    });\r\n}\r\n\r\nfunction editReview(reviewId) {\r\n    const newContent = prompt(\"새로운 리뷰 내용을 입력하세요:\");\r\n    if (newContent) {\r\n        fetch('/edit-review', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ reviewId: reviewId, newContent: newContent })\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                alert(\"리뷰가 성공적으로 수정되었습니다.\");\r\n                fetchUserReviews(sessionStorage.getItem('userId')); // 리뷰 목록 새로고침\r\n            } else {\r\n                alert(\"리뷰 수정에 실패했습니다: \" + data.message);\r\n            }\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n    }\r\n}\r\n\r\nfunction deleteReview(reviewId) {\r\n    if (confirm(\"정말 이 리뷰를 삭제하시겠습니까?\")) {\r\n        fetch('/delete-review', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ reviewId: reviewId })\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                alert(\"리뷰가 성공적으로 삭제되었습니다.\");\r\n                fetchUserReviews(sessionStorage.getItem('userId')); // 리뷰 목록 새로고침\r\n            } else {\r\n                alert(\"리뷰 삭제에 실패했습니다: \" + data.message);\r\n            }\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n    }\r\n}\r\n\r\nfunction likeReview(reviewId) {\r\n    const userId = sessionStorage.getItem('userId'); // userId 가져오기\r\n    if (userId) {\r\n        fetch('/like-review', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ reviewId: reviewId, userId: userId })\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                const likeCountSpan = document.getElementById(`likeCount-${reviewId}`);\r\n                likeCountSpan.textContent = data.likes; // 새로운 좋아요 개수 업데이트\r\n            } else {\r\n                alert('좋아요를 누르는데 실패했습니다.');\r\n            }\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n    } else {\r\n        alert('로그인이 필요합니다.');\r\n    }\r\n}\r\n\r\nfunction fetchUserComments(userId) {\r\n    fetch('/user-comments', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ userId: userId })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        const userComments = document.getElementById('userComments');\r\n        userComments.innerHTML = ''; // 기존 댓글 내용 초기화\r\n        data.comments.forEach(comment => {\r\n            const commentDiv = document.createElement('div');\r\n            commentDiv.className = 'comment';\r\n            commentDiv.innerHTML = `<p>${comment.content}</p>`;\r\n            userComments.appendChild(commentDiv);\r\n        });\r\n    })\r\n    .catch(error => console.error('Error:', error));\r\n}\r\n\r\nfunction deleteAccount() {\r\n    if (confirm('정말로 회원 탈퇴하시겠습니까?')) {\r\n        fetch('/delete-account', {\r\n            method: 'DELETE',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                alert('회원 탈퇴가 완료되었습니다.');\r\n                sessionStorage.removeItem('loggedIn');\r\n                sessionStorage.removeItem('username');\r\n                sessionStorage.removeItem('userId'); // userId 제거\r\n                window.location.href = 'index.html';\r\n            } else {\r\n                alert('회원 탈퇴 중 오류가 발생했습니다.');\r\n            }\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n    }\r\n}\r\n\r\nfunction logout() {\r\n    sessionStorage.removeItem('loggedIn');\r\n    sessionStorage.removeItem('username');\r\n    sessionStorage.removeItem('userId'); // userId 제거\r\n    window.location.href = 'index.html';\r\n}\r\n\r\n// 쿠키 가져오기 함수 추가\r\nfunction getCookie(name) {\r\n    let matches = document.cookie.match(new RegExp(\r\n        \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n    ));\r\n    return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}"],"file":"mypage.dev.js"}