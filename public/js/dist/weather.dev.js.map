{"version":3,"sources":["weather.js"],"names":["document","addEventListener","button","querySelector","navigator","geolocation","getCurrentPosition","success","fail","window","onload","position","latitude","coords","longitude","getWeather","alert","tempSection","placeSection","descSection","iconSection","lat","lon","fetch","method","headers","body","JSON","stringify","response","ok","Error","json","temperature","main","temp","place","name","description","weather","innerText","icon","iconURL","setAttribute","style","display","message"],"mappings":"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","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n    const button = document.querySelector('.button'); // 버튼 클릭 이벤트 생성\r\n\r\n    button.addEventListener('click', () => {\r\n        navigator.geolocation.getCurrentPosition(success, fail); // 위치 정보 요청\r\n    });\r\n\r\n    window.onload = () => { // 새로 고침하면 바로 위치 정보를 요청\r\n        navigator.geolocation.getCurrentPosition(success, fail);\r\n    }\r\n\r\n    const success = (position) => {\r\n        const latitude = position.coords.latitude; // 위도\r\n        const longitude = position.coords.longitude; // 경도\r\n\r\n        getWeather(latitude, longitude);\r\n    };\r\n\r\n    const fail = () => {\r\n        alert(\"위치 접근이 허용되지 않았습니다.\");\r\n    }\r\n\r\n    const tempSection = document.querySelector('.temperature');\r\n    const placeSection = document.querySelector('.place');\r\n    const descSection = document.querySelector('.description');\r\n    const iconSection = document.querySelector('.icon');\r\n\r\n    const getWeather = async (lat, lon) => {\r\n        try {\r\n            const response = await fetch('http://localhost:3000/get-weather', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ lat, lon }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n\r\n            const json = await response.json();\r\n            const temperature = json.main.temp;\r\n            const place = json.name;\r\n            const description = json.weather[0].description;\r\n\r\n            tempSection.innerText = `${temperature}°C`;\r\n            placeSection.innerText = place;\r\n            descSection.innerText = description;\r\n\r\n            const icon = json.weather[0].icon;\r\n            const iconURL = `http://openweathermap.org/img/wn/${icon}@2x.png`;\r\n\r\n            iconSection.setAttribute('src', iconURL);\r\n            iconSection.style.display = 'block'; // 이미지 로드 후 표시\r\n        } catch (error) {\r\n            alert('날씨 정보를 불러오는 데 실패했습니다: ' + error.message);\r\n        }\r\n    }\r\n});\r\n"],"file":"weather.dev.js"}